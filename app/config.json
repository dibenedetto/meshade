{
	"port" : 8000,

	"info" : {
		"version"     : "1.0.0",
		"name"        : "Numel Playground",
		"author"      : "marco@numel.app",
		"description" : "Numel AI Playground"
	},

	"options" : {
		"seed"   : 7,
		"reload" : true
	},

	"backends" : [
		{
			"type"    : "agno",
			"version" : ""
		}
	],

	"models" : [
		{
			"type" : "openai",
			"id"   : "gpt-4"
		}
	],

	"embeddings" : [
		{
			"type" : "openai",
			"id"   : ""
		}
	],

	"prompts" : [
		{
			"model"        : 0,
			"embedding"    : 0,
			"description"  : "Numel AI Assistant",
			"instructions" : [
				"Be helpful and informative",
				"Provide accurate and relevant information",
				"Use markdown formatting when appropriate"
			]
		}
	],

	"content_dbs" : [
		{
			"engine" : "sqlite",
			"url"    : "storage/content_db_sqlite_1.db"
		}
	],

	"index_dbs" : [
		{
			"engine"      : "lancedb",
			"embedding"   : 0,
			"url"         : "storage/knowledge/index_db_lancedb_1",
			"search_type" : "hybrid"
		}
	],

	"memory_mgrs" : [
		{
			"query"   : false,
			"update"  : false,
			"managed" : false,
			"prompt"  : null
		}
	],

	"session_mgrs" : [
		{
			"query"        : false,
			"update"       : false,
			"summarize"    : false,
			"history_size" : 10,
			"prompt"       : null
		}
	],

	"knowledge_mgrs" : [
		{
			"query"        : false,
			"description"  : null,
			"content_db"   : 0,
			"index_db"     : 0,
			"max_results"  : 10,
			"urls"         : []
		}
	],

	"tools" : [
		{
			"type" : "reasoning",
			"args" : null,
			"ref"  : null
		},
		{
			"type" : "web_search",
			"args" : {
				"max_results" : 5
			},
			"ref"  : null
		}
	],

	"agent_options" : [
		{
			"markdown" : true
		}
	],

	"agents" : [
		{
			"info" : {
				"version" : "1.0.0",
				"name"    : "Numel Agent One",
				"author"  : "marco@numel.app"
			},

			"options"       : 0,
			"backend"       : 0,
			"prompt"        : 0,
			"content_db"    : 0,
			"memory_mgr"    : 0,
			"session_mgr"   : 0,
			"knowledge_mgr" : 0,
			"tools"         : [0, 1]
		},
		{
			"info" : {
				"version" : "1.0.0",
				"name"    : "Numel Agent Two",
				"author"  : "marco@numel.app"
			},

			"options" : {
				"markdown" : true
			},

			"backend" : {
				"type"    : "langchain",
				"version" : ""
			},

			"prompt" : {
				"model" : {
					"type" : "openai",
					"id"   : "gpt-5"
				},
				"embedding" : {
					"type" : "ollama",
					"id"   : "kimi"
				},
				"description"  : "Numel AI Master",
				"instructions" : [
					"Be proactive"
				]
			},

			"content_db" : {
				"engine" : "postgres",
				"url"    : "storage/content_db_postgres_1.db"
			},

			"memory_mgr" : {
				"query"   : true,
				"update"  : true,
				"managed" : true,
				"prompt"  : 0
			},

			"session_mgr" : {
				"query"        : true,
				"update"       : false,
				"summarize"    : true,
				"history_size" : 8,
				"prompt"       : null
			},

			"knowledge_mgr" : {
				"query"        : false,
				"description"  : null,
				"content_db"   : 0,
				"index_db"     : {
					"engine"      : "chromadb",
					"embedding"   : 0,
					"url"         : "storage/index_db_chromadb_1",
					"search_type" : "hybrid"
				},
				"max_results"  : 5,
				"urls"         : []
			},

			"tools" : [
				{
					"type" : "wikimods",
					"args" : null,
					"ref"  : null
				},
				1
			]
		}
	],

	"workflows": [
		{
			"id": "test_workflow_1",
			"name": "Simple Test Workflow",
			"description": "A simple workflow for testing",
			"version": "1.0.0",
			"nodes": [
				{
					"id": "start_1",
					"type": "start",
					"name": "Start",
					"position": {"x": 100, "y": 200},
					"config": {}
				},
				{
					"id": "agent_1",
					"type": "agent",
					"name": "Test Agent",
					"position": {"x": 400, "y": 200},
					"config": {
						"agent": {
							"agent_ref": 0,
							"input_mapping": {"message": "user_query"},
							"output_mapping": {"response": "content"}
						}
					}
				},
				{
					"id": "end_1",
					"type": "end",
					"name": "End",
					"position": {"x": 700, "y": 200},
					"config": {}
				}
			],
			"edges": [
				{
					"id": "edge_1",
					"source_node_id": "start_1",
					"target_node_id": "agent_1",
					"type": "default"
				},
				{
					"id": "edge_2",
					"source_node_id": "agent_1",
					"target_node_id": "end_1",
					"type": "default"
				}
			],
			"start_node_id": "start_1",
			"end_node_ids": ["end_1"],
			"agents": [0]
		}
	]
}
