{
	"port" : 8000,

	"info" : {
		"version"     : "1.0.0",
		"name"        : "Numel Playground",
		"author"      : "marco@numel.app",
		"description" : "Numel AI Playground"
	},

	"options" : {
		"seed"   : 7,
		"reload" : true
	},

	"backends" : [
		{
			"type"    : "agno",
			"version" : ""
		}
	],

	"models" : [
		{
			"type" : "openai",
			"id"   : "gpt-4"
		}
	],

	"embeddings" : [
		{
			"type" : "openai",
			"id"   : ""
		}
	],

	"prompts" : [
		{
			"model"        : 0,
			"embedding"    : 0,
			"description"  : "Numel AI Assistant",
			"instructions" : [
				"Be helpful and informative",
				"Provide accurate and relevant information",
				"Use markdown formatting when appropriate"
			]
		}
	],

	"content_dbs" : [
		{
			"engine" : "sqlite",
			"url"    : "storage/content_db_sqlite_1.db"
		}
	],

	"index_dbs" : [
		{
			"engine"      : "lancedb",
			"embedding"   : 0,
			"url"         : "storage/knowledge/index_db_lancedb_1",
			"search_type" : "hybrid"
		}
	],

	"memory_mgrs" : [
		{
			"query"   : false,
			"update"  : false,
			"managed" : false,
			"prompt"  : null
		}
	],

	"session_mgrs" : [
		{
			"query"        : false,
			"update"       : false,
			"summarize"    : false,
			"history_size" : 10,
			"prompt"       : null
		}
	],

	"knowledge_mgrs" : [
		{
			"query"        : false,
			"description"  : null,
			"content_db"   : 0,
			"index_db"     : 0,
			"max_results"  : 10,
			"urls"         : []
		}
	],

	"tools" : [
		{
			"type" : "reasoning",
			"args" : null,
			"ref"  : null
		},
		{
			"type" : "web_search",
			"args" : {
				"max_results" : 5
			},
			"ref"  : null
		}
	],

	"agent_options" : [
		{
			"markdown" : true
		}
	],

	"agents" : [
		{
			"info" : {
				"version" : "1.0.0",
				"name"    : "Numel Agent One",
				"author"  : "marco@numel.app"
			},

			"options"       : 0,
			"backend"       : 0,
			"prompt"        : 0,
			"content_db"    : 0,
			"memory_mgr"    : 0,
			"session_mgr"   : 0,
			"knowledge_mgr" : 0,
			"tools"         : [0, 1]
		},
		{
			"info" : {
				"version" : "1.0.0",
				"name"    : "Numel Agent Two",
				"author"  : "marco@numel.app"
			},

			"options" : {
				"markdown" : true
			},

			"backend" : {
				"type"    : "langchain",
				"version" : ""
			},

			"prompt" : {
				"model" : {
					"type" : "openai",
					"id"   : "gpt-5"
				},
				"embedding" : {
					"type" : "ollama",
					"id"   : "kimi"
				},
				"description"  : "Numel AI Master",
				"instructions" : [
					"Be proactive"
				]
			},

			"content_db" : {
				"engine" : "postgres",
				"url"    : "storage/content_db_postgres_1.db"
			},

			"memory_mgr" : {
				"query"   : true,
				"update"  : true,
				"managed" : true,
				"prompt"  : 0
			},

			"session_mgr" : {
				"query"        : true,
				"update"       : false,
				"summarize"    : true,
				"history_size" : 8,
				"prompt"       : null
			},

			"knowledge_mgr" : {
				"query"        : false,
				"description"  : null,
				"content_db"   : 0,
				"index_db"     : {
					"engine"      : "chromadb",
					"embedding"   : 0,
					"url"         : "storage/index_db_chromadb_1",
					"search_type" : "hybrid"
				},
				"max_results"  : 5,
				"urls"         : []
			},

			"tools" : [
				{
					"type" : "wikimods",
					"args" : null,
					"ref"  : null
				},
				1
			]
		}
	],
	"workflows" : [
		{
			"info": {
				"name": "Customer Support Workflow",
				"version": "1.0.0",
				"author": "marco@numel.app",
				"description": "Automated customer support workflow with decision branches"
			},
			"options": {},
			"nodes": [
				{
					"id": "start_1",
					"type": "start",
					"label": "Start",
					"position": {"x": 100, "y": 50},
					"data": {
						"customer_query": "",
						"priority": "normal"
					}
				},
				{
					"id": "input_1",
					"type": "user_input",
					"label": "Get Customer Query",
					"position": {"x": 100, "y": 150},
					"prompt_text": "Please describe your issue:",
					"timeout": 300
				},
				{
					"id": "agent_1",
					"type": "agent",
					"label": "Analyze Query",
					"position": {"x": 100, "y": 250},
					"agent": 0,
					"input_mapping": {
						"query": "customer_query"
					},
					"output_mapping": {
						"category": "agent_output.category",
						"sentiment": "agent_output.sentiment"
					}
				},
				{
					"id": "decision_1",
					"type": "decision",
					"label": "Route by Category",
					"position": {"x": 100, "y": 350},
					"condition_field": "category",
					"branches": {
						"technical": "technical",
						"billing": "billing",
						"general": "general"
					}
				},
				{
					"id": "agent_tech",
					"type": "agent",
					"label": "Technical Support",
					"position": {"x": -100, "y": 450},
					"agent": 0,
					"input_mapping": {
						"query": "customer_query",
						"category": "category"
					}
				},
				{
					"id": "agent_billing",
					"type": "agent",
					"label": "Billing Support",
					"position": {"x": 100, "y": 450},
					"agent": 0,
					"input_mapping": {
						"query": "customer_query",
						"category": "category"
					}
				},
				{
					"id": "agent_general",
					"type": "agent",
					"label": "General Support",
					"position": {"x": 300, "y": 450},
					"agent": 0,
					"input_mapping": {
						"query": "customer_query",
						"category": "category"
					}
				},
				{
					"id": "merge_1",
					"type": "merge",
					"label": "Merge Responses",
					"position": {"x": 100, "y": 550},
					"strategy": "first"
				},
				{
					"id": "transform_1",
					"type": "transform",
					"label": "Format Response",
					"position": {"x": 100, "y": 650},
					"transform_type": "python",
					"transform_script": "output = f\"Response: {input.get('response', 'No response')}\\nCategory: {input.get('category', 'unknown')}\"",
					"input_mapping": {
						"response": "agent_output",
						"category": "category"
					}
				},
				{
					"id": "end_1",
					"type": "end",
					"label": "End",
					"position": {"x": 100, "y": 750},
					"output_mapping": {
						"final_response": "transform_output"
					}
				}
			],
			"edges": [
				{
					"id": "edge_1",
					"source": "start_1",
					"target": "input_1"
				},
				{
					"id": "edge_2",
					"source": "input_1",
					"target": "agent_1"
				},
				{
					"id": "edge_3",
					"source": "agent_1",
					"target": "decision_1"
				},
				{
					"id": "edge_4",
					"source": "decision_1",
					"target": "agent_tech",
					"condition": {
						"type": "equals",
						"field": "category",
						"value": "technical"
					},
					"label": "Technical"
				},
				{
					"id": "edge_5",
					"source": "decision_1",
					"target": "agent_billing",
					"condition": {
						"type": "equals",
						"field": "category",
						"value": "billing"
					},
					"label": "Billing"
				},
				{
					"id": "edge_6",
					"source": "decision_1",
					"target": "agent_general",
					"condition": {
						"type": "equals",
						"field": "category",
						"value": "general"
					},
					"label": "General"
				},
				{
					"id": "edge_7",
					"source": "agent_tech",
					"target": "merge_1"
				},
				{
					"id": "edge_8",
					"source": "agent_billing",
					"target": "merge_1"
				},
				{
					"id": "edge_9",
					"source": "agent_general",
					"target": "merge_1"
				},
				{
					"id": "edge_10",
					"source": "merge_1",
					"target": "transform_1"
				},
				{
					"id": "edge_11",
					"source": "transform_1",
					"target": "end_1"
				}
			],
			"variables": {
				"max_retries": 3,
				"timeout": 300
			}
		}
	]
}
